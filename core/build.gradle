apply plugin: "java"
sourceCompatibility = 1.6
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets.main.java.srcDirs = ["src/"]
eclipse.project {
    name = appName + "-core"
}
dependencies {
    compile files('src/com/github/aconsultinggmbh/libs/gdx-backend-headless-1.9.6.jar')
    compile files('src/com/github/aconsultinggmbh/libs/junit-4.12.jar')
    compile files('src/com/github/aconsultinggmbh/libs/mockito-core-2.2.7.jar')
}
/*
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}


apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.7.6.201602180812'
}

// Edit covered scope if needed
// For my part I like having the coverage of both application and tests
def coverageSourceDirs = [
        '../app/src'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports "

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes',
            excludes: ['**///R.class',
                       //'**/R$*.class',
                       //'**/*$ViewInjector*.*',
                       //'**/BuildConfig.*',
                       //'**/Manifest*.*']
    //)

    /*
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/jacoco.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
*/